import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as i,o as a}from"./app-_9vaDOHR.js";const l={};function t(p,e){return a(),s("div",null,e[0]||(e[0]=[i(`<h1 id="keepalive内置组件" tabindex="-1"><a class="header-anchor" href="#keepalive内置组件"><span>KeepAlive内置组件</span></a></h1><p>在 Vue 中也提供了一些内置组件，例如：</p><ul><li>Transition</li><li>TransitionGroup</li><li>KeepAlive</li><li>Teleport</li><li>Suspense</li></ul><p><strong>component元素</strong></p><p>component <strong>并非组件</strong>，而是和 slot、template 等元素类似的一种特殊元素，这种元素是模板语法的一部分。但它们并非真正的组件，同时在模板编译期间会被编译掉。因此，它们通常在模板中用小写字母书写。</p><p>component 用于渲染动态组件，具体渲染的组件取决于 is 属性</p><p>文档地址：<a href="https://cn.vuejs.org/api/built-in-special-elements.html#component" target="_blank" rel="noopener noreferrer">https://cn.vuejs.org/api/built-in-special-elements.html#component</a></p><p><strong>KeepAlive基本使用</strong></p><p>KeepAlive 是一个<strong>内置组件</strong>，该组件的主要作用是<strong>缓存组件的状态</strong>。</p><p>关键代码如下：</p><p>App.vue</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;router-view v-slot=&quot;{ Component }&quot;&gt;</span></span>
<span class="line"><span>  &lt;keep-alive&gt;</span></span>
<span class="line"><span>    &lt;component :is=&quot;Component&quot; /&gt;</span></span>
<span class="line"><span>  &lt;/keep-alive&gt;</span></span>
<span class="line"><span>&lt;/router-view&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>router-view 组件通过作用于插槽拿到一个和当前路由所匹配的组件，然后将这个组件用于 component 元素的 is 属性。</p><p>最为关键的就是 component 元素外边包裹了 keep-alive 内置组件，该组件让状态得以保留。</p><p><strong>KeepAlive相关细节</strong></p><p>KeepAlive 是一个内置组件，该组件的主要作用是缓存组件的状态。</p><p>使用 KeepAlive 来保持组件状态的之后，可以使用**包含(include)/排除(exclude)**关键字来指定要缓存的组件，这两个 prop 的值都可以是一个以英文逗号分隔的字符串、一个正则表达式，或是包含这两种类型的一个数组：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;!-- 以英文逗号分隔的字符串 --&gt;</span></span>
<span class="line"><span>&lt;KeepAlive include=&quot;a,b&quot;&gt;</span></span>
<span class="line"><span>  &lt;component :is=&quot;view&quot; /&gt;</span></span>
<span class="line"><span>&lt;/KeepAlive&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!-- 正则表达式 (需使用 v-bind) --&gt;</span></span>
<span class="line"><span>&lt;KeepAlive :include=&quot;/a|b/&quot;&gt;</span></span>
<span class="line"><span>  &lt;component :is=&quot;view&quot; /&gt;</span></span>
<span class="line"><span>&lt;/KeepAlive&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;!-- 数组 (需使用 v-bind) --&gt;</span></span>
<span class="line"><span>&lt;KeepAlive :include=&quot;[&#39;a&#39;, &#39;b&#39;]&quot;&gt;</span></span>
<span class="line"><span>  &lt;component :is=&quot;view&quot; /&gt;</span></span>
<span class="line"><span>&lt;/KeepAlive&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;router-view v-slot=&quot;{ Component }&quot;&gt;</span></span>
<span class="line"><span>  &lt;keep-alive include=&quot;Counter,Timer&quot;&gt;</span></span>
<span class="line"><span>    &lt;component :is=&quot;Component&quot; /&gt;</span></span>
<span class="line"><span>  &lt;/keep-alive&gt;</span></span>
<span class="line"><span>&lt;/router-view&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以英文逗号分隔的时候，注意中间不要添加空格。</p><p>还可以接收一个 max 属性，用于<strong>指定最大缓存组件数</strong>。如果缓存的实例数量即将超过指定的那个最大数量，则最久没有被访问的缓存实例将被销毁，以便为新的实例腾出空间。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;router-view v-slot=&quot;{ Component }&quot;&gt;</span></span>
<span class="line"><span>  &lt;keep-alive :max=&quot;3&quot;&gt;</span></span>
<span class="line"><span>    &lt;component :is=&quot;Component&quot; /&gt;</span></span>
<span class="line"><span>  &lt;/keep-alive&gt;</span></span>
<span class="line"><span>&lt;/router-view&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><ul><li>EOF-</li></ul>`,25)]))}const d=n(l,[["render",t],["__file","Vue18.html.vue"]]),c=JSON.parse('{"path":"/Vue/Vue18.html","title":"KeepAlive内置组件","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.84,"words":553},"filePathRelative":"Vue/Vue18.md"}');export{d as comp,c as data};

import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as r,o as t}from"./app-_9vaDOHR.js";const n={};function a(c,e){return t(),l("div",null,e[0]||(e[0]=[r('<h1 id="弹性盒布局" tabindex="-1"><a class="header-anchor" href="#弹性盒布局"><span>弹性盒布局</span></a></h1><p>我们说 flexbox 是一种一维的布局，是因为一个 flexbox 一次只能处理一个维度上的元素布局，一行或者一列。</p><h2 id="flexbox-的两根轴线" tabindex="-1"><a class="header-anchor" href="#flexbox-的两根轴线"><span><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox#flexbox_%E7%9A%84%E4%B8%A4%E6%A0%B9%E8%BD%B4%E7%BA%BF" target="_blank" rel="noopener noreferrer">flexbox 的两根轴线</a></span></a></h2><p>当使用 flex 布局时，首先想到的是两根轴线 — 主轴和交叉轴。主轴由 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-direction" target="_blank" rel="noopener noreferrer"><code>flex-direction</code></a> 定义，另一根轴垂直于它。我们使用 flexbox 的所有属性都跟这两根轴线有关，所以有必要在一开始首先理解它。</p><p>主轴由 <code>flex-direction</code> 定义，可以取 4 个值：</p><ul><li><code>row</code></li><li><code>row-reverse</code></li><li><code>column</code></li><li><code>column-reverse</code></li></ul><p>如果你选择了 <code>row</code> 或者 <code>row-reverse</code>，你的主轴将沿着<strong>行向</strong>延伸，交叉轴的方向沿着上下方向延伸。</p><figure><img src="https://anxinshaw.us.kg/image19.png" alt="当主轴方向设置为 row 时，主轴沿着行向延伸" tabindex="0" loading="lazy"><figcaption>当主轴方向设置为 row 时，主轴沿着行向延伸</figcaption></figure><p>选择 <code>column</code> 或者 <code>column-reverse</code> 时，你的主轴会沿着页面的上下方向延伸——也就是<strong>块向</strong>，交叉轴就是水平方向。</p><figure><img src="https://anxinshaw.us.kg/image20.png" alt="当主轴方向设置为 column 时，主轴沿着块向延伸" tabindex="0" loading="lazy"><figcaption>当主轴方向设置为 column 时，主轴沿着块向延伸</figcaption></figure><ul><li>元素排列为一行（<code>flex-direction</code> 属性的初始值是 <code>row</code>）。</li><li>元素从主轴的起始线开始。</li><li>元素不会在主维度方向拉伸，但是可以缩小。</li><li>元素被拉伸来填充交叉轴大小。</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis" target="_blank" rel="noopener noreferrer"><code>flex-basis</code></a> 属性为 <code>auto</code>。这个 <code>flex-basis</code> 属性 被指定为关键词 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis#content" target="_blank" rel="noopener noreferrer"><code>content</code></a> 或者 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis#%3C&#39;width&#39;%3E" target="_blank" rel="noopener noreferrer"><code>&lt;&#39;width&#39;&gt;</code></a>.</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-wrap" target="_blank" rel="noopener noreferrer"><code>flex-wrap</code></a> 属性为 <code>nowrap</code>。<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS" target="_blank" rel="noopener noreferrer">CSS</a> 的 <strong><code>flex-wrap</code></strong> 属性指定 flex 元素单行显示还是多行显示</li></ul><h2 id="flex-元素上的属性" tabindex="-1"><a class="header-anchor" href="#flex-元素上的属性"><span><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox#flex_%E5%85%83%E7%B4%A0%E4%B8%8A%E7%9A%84%E5%B1%9E%E6%80%A7" target="_blank" rel="noopener noreferrer">flex 元素上的属性</a></span></a></h2><p>为了更好地控制 flex 元素，有三个属性可以作用于它们：</p><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-grow" target="_blank" rel="noopener noreferrer"><code>flex-grow</code></a> 用于控制弹性项目如何增长，属性规定为一个 <code>&lt;number&gt;</code></p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-shrink" target="_blank" rel="noopener noreferrer"><code>flex-shrink</code></a> 用于控制弹性项目如何收缩，属性只能是一个 <code>&lt;number&gt;</code></p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis" target="_blank" rel="noopener noreferrer"><code>flex-basis</code></a> 用于控制弹性项目初始大小，属性被指定为<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis#content" target="_blank" rel="noopener noreferrer"><code>content</code></a>或者关键词<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis#%3C&#39;width&#39;%3E" target="_blank" rel="noopener noreferrer"><code>&lt;&#39;width&#39;&gt;</code></a>的宽度值</p></li></ul><h2 id="justify-content" tabindex="-1"><a class="header-anchor" href="#justify-content"><span>Justify Content</span></a></h2><p><code>justifyContent</code>描述如何在容器的主轴内对齐子项。</p><p><code>flexDirection</code>（伸缩方向）设置为<code>row</code>（行）时，你可以使用此属性在容器内水平居中一个子元素，或在<code>flexDirection</code>设置为<code>column</code>（列）时，在容器内垂直居中一个子元素。</p><ul><li><code>flex-start</code>（<strong>默认值</strong>）将容器的子项与容器主轴的起点对齐。</li><li><code>flex-end</code>将容器的子项与容器主轴的末端对齐。</li><li><code>center</code>将容器的子项与容器主轴的中心对齐。</li><li><code>space-between</code>沿着容器的主轴均匀分布子元素，并在子元素之间分配剩余空间。</li><li><code>space-around</code>沿容器主轴均匀分布子元素，并将剩余空间分布在子元素周围。与 相比<code>space-between</code>，使用<code>space-around</code>会导致空间分布到第一个子元素的开头和最后一个子元素的结尾。</li><li><code>space-evenly</code>沿主轴均匀分布对齐容器内的子项。每对相邻项之间的间距、主起始边缘与第一个项之间的间距以及主结束边缘与最后一个项之间的间距都完全相同。</li></ul><h2 id="align-items" tabindex="-1"><a class="header-anchor" href="#align-items"><span>Align Items</span></a></h2><p><a href="https://reactnative.dev/docs/layout-props#alignitems" target="_blank" rel="noopener noreferrer"><code>alignItems</code></a>描述如何沿容器的横轴对齐子元素。它与非常相似<code>justifyContent</code>，但不是应用于主轴，而是<code>alignItems</code>应用于横轴。</p><ul><li><code>stretch</code>（<strong>默认值</strong>）拉伸容器的子项以匹配<code>height</code>容器的横轴。</li><li><code>flex-start</code>将容器的子项与容器横轴的起点对齐。</li><li><code>flex-end</code>将容器的子项与容器横轴的末端对齐。</li><li><code>center</code>将容器的子项与容器横轴的中心对齐。</li><li><code>baseline</code>将容器的子项沿公共基线对齐。可以将各个子项设置为其父项的参考基线。</li></ul><p>最后，一个用来学<a href="https://flexboxfroggy.com/#zh-cn" target="_blank" rel="noopener noreferrer">flex的布局网站</a></p>',22)]))}const s=o(n,[["render",a],["__file","CSS02.html.vue"]]),f=JSON.parse('{"path":"/HTML_CSS/CSS/CSS02.html","title":"弹性盒布局","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"flexbox 的两根轴线","slug":"flexbox-的两根轴线","link":"#flexbox-的两根轴线","children":[]},{"level":2,"title":"flex 元素上的属性","slug":"flex-元素上的属性","link":"#flex-元素上的属性","children":[]},{"level":2,"title":"Justify Content","slug":"justify-content","link":"#justify-content","children":[]},{"level":2,"title":"Align Items","slug":"align-items","link":"#align-items","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.3,"words":989},"filePathRelative":"HTML&CSS/CSS/CSS02.md"}');export{s as comp,f as data};
